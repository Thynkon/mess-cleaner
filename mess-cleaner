#!/usr/bin/env zsh

usage() {
	echo "$PROGRAM_NAME usage:\n"
	echo "-f\tFile to rename"
	echo "-h\tDisplays this message"
	echo "-m\tProgram mode"
	echo "\t0 - Rename file, create directory and move file"
	echo "\t1 - Rename file"
	echo "\t2 - Create directory and move file\n"
}

echoerr() {
	echo "$@" 1>&2
}

# This makes the script exit if a command fails
set -o errexit
# Avoids expressions like 'error here | true' to be executed
set -o pipefail
# List all executed lines. Usefull for debugging
#set -o xtrace

readonly PROJECT_ROOT="$HOME/dev/mess-cleaner"
readonly CONFIG_FILE="$PROJECT_ROOT/modules.conf"
readonly PROGRAM_NAME="mess-cleaner"

class=""
# Default mode is: rename file and create a directory
mode=2

while getopts "f:hm:" option; do
	case "$option" in
		f)
			file_list+=($OPTARG)
			;;
		h)
			usage
			exit 0
			;;
		m)
			mode=$OPTARG
			;;
		*)
			usage
			exit 1
			;;
	esac
done

for file in $file_list; do
	if [[ -z "$file" ]]; then
		echoerr "Missing options!\n"
		usage
		exit 1
	fi

	module_name=$(echo "$file" | sed 's/.*[a-zA-Z_]\([0-9]\{3\}\)_.*/\1/')

	# Checks if the class entered by the user exists in the config file
	grep $module_name $CONFIG_FILE -n 1>&2 /dev/null

	if [ $? -eq 1 ]; then
		echoerr "$module_name does not exist!"
		exit 1
	fi

	if [ ! -f "$file" ]; then
		echoerr "File $file does not exit!"
		exit 1
	fi

	if [[ ! $mode =~ '^[1-3]$' ]]; then
		echoerr "The mode you entered is not valid"
		echoerr "Enter a mode between 1 and 3"
		exit 1
	fi
	class_name="INFO"
	class_name+=$(grep $module_name $CONFIG_FILE -n | cut -f1 -d:)

	# Removes all the unwanted characters
	base_name=$(perl -pe "s/^.*(?=(_[psPS]_))//g;" -pe "s/(_f)?(_v[0-9{2}][a-z]?)?//g" <<< "$file")

	file_name="$class_name"
	file_name+="_M"
	file_name+="$module_name"
	file_name+="$base_name"

	directory_name=$(perl -pe "s/^.*(?=([0-9]{4}))//g;" -pe "s/\..*$//g" <<< "$base_name")

	case "$mode" in
		1)
			mkdir "$directory_name"
			mv $file $file_name
			mv $file_name $directory_name
			;;
		2)
			mv $file $file_name
			;;
		3)
			mkdir "$directory_name"
			mv $file $directory_name
			;;
		*)
			;;
	esac
done

exit 0
